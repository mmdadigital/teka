/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-next-3-icon-name: 'arrow-next-3-icon';
$arrow-next-3-icon-x: 0px;
$arrow-next-3-icon-y: 0px;
$arrow-next-3-icon-offset-x: 0px;
$arrow-next-3-icon-offset-y: 0px;
$arrow-next-3-icon-width: 256px;
$arrow-next-3-icon-height: 256px;
$arrow-next-3-icon-total-width: 512px;
$arrow-next-3-icon-total-height: 512px;
$arrow-next-3-icon-image: 'sprite.png';
$arrow-next-3-icon: (0px, 0px, 0px, 0px, 256px, 256px, 512px, 512px, 'sprite.png', 'arrow-next-3-icon', );
$arrow-rewind-icon-name: 'arrow-rewind-icon';
$arrow-rewind-icon-x: 256px;
$arrow-rewind-icon-y: 0px;
$arrow-rewind-icon-offset-x: -256px;
$arrow-rewind-icon-offset-y: 0px;
$arrow-rewind-icon-width: 256px;
$arrow-rewind-icon-height: 256px;
$arrow-rewind-icon-total-width: 512px;
$arrow-rewind-icon-total-height: 512px;
$arrow-rewind-icon-image: 'sprite.png';
$arrow-rewind-icon: (256px, 0px, -256px, 0px, 256px, 256px, 512px, 512px, 'sprite.png', 'arrow-rewind-icon', );
$down-copy-1410790832n8k4g-name: 'down-copy-1410790832n8k4g';
$down-copy-1410790832n8k4g-x: 0px;
$down-copy-1410790832n8k4g-y: 256px;
$down-copy-1410790832n8k4g-offset-x: 0px;
$down-copy-1410790832n8k4g-offset-y: -256px;
$down-copy-1410790832n8k4g-width: 256px;
$down-copy-1410790832n8k4g-height: 256px;
$down-copy-1410790832n8k4g-total-width: 512px;
$down-copy-1410790832n8k4g-total-height: 512px;
$down-copy-1410790832n8k4g-image: 'sprite.png';
$down-copy-1410790832n8k4g: (0px, 256px, 0px, -256px, 256px, 256px, 512px, 512px, 'sprite.png', 'down-copy-1410790832n8k4g', );
$spritesheet-width: 512px;
$spritesheet-height: 512px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($arrow-next-3-icon, $arrow-rewind-icon, $down-copy-1410790832n8k4g, );
$spritesheet: (512px, 512px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
